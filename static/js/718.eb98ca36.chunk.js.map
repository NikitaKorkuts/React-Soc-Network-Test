{"version":3,"file":"static/js/718.eb98ca36.chunk.js","mappings":"kKACA,EAAmC,oC,UCAnC,EAAyB,wBAAzB,EAA2D,yBCA3D,GAAgB,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,uBAAuB,OAAS,wB,mBCoBrH,EAjBmB,SAACA,GAChB,OACI,iBAAKC,UAAWC,EAAAA,OAAhB,WACI,gBAAKD,UAAWC,EAAAA,OAAhB,UACI,gBAAKC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,KAA3C,UACI,mBAAQJ,UAAWC,EAAAA,OAAUI,GAAG,KAAKC,GAAG,KAAKC,EAAE,YAGvD,gBAAKP,UAAWC,EAAAA,KAAhB,UACI,SAAC,KAAD,CAASO,GAAI,YAAcT,EAAMU,GACxBT,UAAW,SAACU,GAAD,OAAaA,EAAQC,SAAWV,EAAAA,OAAW,IAD/D,SACoEF,EAAMa,aCA1F,EAVgB,SAACb,GACb,IAAIc,EAAmBd,EAAMe,QAASC,KAAI,SAAAC,GAAC,OAAI,SAACC,EAAD,CAAYR,GAAIO,EAAEP,GAAeG,KAAMI,EAAEJ,MAAdI,EAAEP,OAC5E,OACI,iBAAKT,UAAWC,EAAhB,WACI,eAAID,UAAWC,EAAf,qBACCY,M,2DCLPK,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,SCOvB,GAAeE,E,QAAAA,KAAQC,EAAAA,EAAAA,KANC,SAACJ,GACrB,MAAO,CACHL,QAASK,EAAMK,UAAUV,aDAD,SAACW,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK5B,MAAMqB,QACT,SAACK,GAAD,UAAeE,KAAK5B,SADI,SAAC,KAAD,CAAUS,GAAI,eAHV,GACXoB,EAAAA,WAMhC,OAAOL,EAAAA,EAAAA,IAAQL,EAARK,CAAoCG,KCH/C,CAAmEG,G,UCXnE,EAA2B,2BAA3B,EAAoE,8BAApE,EAAiH,+BAAjH,EAA0J,0BCA1J,EAA0B,yBAA1B,EAA4D,wBAA5D,EAA2F,sBAA3F,EAA0H,wBAA1H,EAA2J,wB,UCgB3J,EAboB,SAAC9B,GACjB,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,UACI,gBAAK6B,IAAKC,EAAQC,IAAI,cAE1B,gBAAKhC,UAAWC,EAAhB,UACI,cAAGD,UAAWC,EAAW,IAAMA,EAA/B,SAA0CF,EAAMkC,gB,uCCL5DC,GAAYC,EAAAA,EAAAA,GAAiB,IAc3BC,GAAuBC,EAAAA,EAAAA,GAAU,CACnCC,KAAM,eADmBD,EAZL,SAACtC,GAErB,OACI,iBAAMwC,SAAUxC,EAAMyC,aAAtB,UACI,iBAAKxC,UAAWC,EAAhB,WACI,SAACwC,EAAA,EAAD,CAAO7B,KAAK,UAAU8B,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,GAAYlC,UAAWC,EAAgB6C,YAAa,sBACpH,mBAAQ9C,UAAWC,EAAW8C,KAAK,SAAnC,0BAoBhB,EAVoB,SAAChD,GAKjB,OACI,SAACqC,EAAD,CAAsBG,SALT,SAACS,EAAUC,GACxBlD,EAAMmD,WAAWF,EAASf,SAC1BlC,EAAMoD,iBAAiBF,OCZ/B,EAViB,SAAClD,GACd,IAAIqD,EAAoBrD,EAAMsD,SAAUtC,KAAI,SAAAuC,GAAC,OAAI,SAACC,EAAD,CAAwBtB,QAASqB,EAAErB,SAAjBqB,EAAE7C,OACrE,OACI,iBAAKT,UAAWC,EAAhB,UACKmD,GACD,SAAC,EAAD,CAAaD,iBAAkBpD,EAAMoD,iBAAkBD,WAAYnD,EAAMmD,iB,UCcrF,GAF0B3B,EAAAA,EAAAA,KAhBF,SAACJ,GACrB,MAAO,CACHkC,SAAUlC,EAAMK,UAAU6B,aAGP,SAACJ,GACxB,MAAO,CACHC,WAAY,SAACM,GACTP,GAASQ,EAAAA,EAAAA,GAAwBD,KAErCL,iBAAkB,SAACF,GACfA,GAASS,EAAAA,EAAAA,IAAM,oBAKDnC,CAA6CoC,GCRvE,EATkB,SAAC5D,GACf,OACI,iBAAKC,UAAWC,EAAhB,WACI,SAAC2D,EAAD,KACA,SAAC,EAAD,S,8HCRZ,G,QAA8B,mCAA9B,EAAwE,4B,yECG3DC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SACpDC,EAAWH,GAAWC,EAC1B,OACI,iBAAKjE,UAAWC,EAAgB,KAAOkE,EAAWlE,EAAU,IAA5D,UACKiE,EACAC,IAAY,0BAAOF,QAKnBtB,EAAW,SAAC5C,GACrB,IAAO+D,EAAoC/D,EAApC+D,MAAuBM,GAAarE,EAA7BgE,KAA6BhE,EAAvBsE,OAApB,OAA2CtE,EAA3C,IACA,OAAQ,SAAC8D,GAAD,kBAAiB9D,GAAjB,cAAyB,uCAAc+D,GAAWM,QAGjDE,EAAQ,SAACvE,GAClB,IAAO+D,EAAoC/D,EAApC+D,MAAuBM,GAAarE,EAA7BgE,KAA6BhE,EAAvBsE,OAApB,OAA2CtE,EAA3C,IACA,OAAS,SAAC8D,GAAD,kBAAiB9D,GAAjB,cAAwB,oCAAW+D,GAAWM,QAG9CG,EAAc,SAAC7B,EAAWE,EAAUG,EAAMnC,EAAMb,GACzD,OACI,SAAC0C,EAAA,GAAD,QAAOC,UAAWA,EAAWE,SAAUA,EAAUG,KAAMA,EAAMnC,KAAMA,GAAUb,M,4EC1B9E,IAAM8C,EAAW,SAACW,GACrB,IAAIA,EACJ,MAAO,qBAEErB,EAAmB,SAACD,GAAD,OAAe,SAACsB,GAC5C,GAAGA,EAAMgB,OAAStC,EAAW,MAAM,2BAAN,OAAkCA,EAAlC","sources":["webpack://react-1/./src/components/Messanger/Messanger.module.css?d471","webpack://react-1/./src/components/Messanger/Dialogs/Dialogs.module.css?35cb","webpack://react-1/./src/components/Messanger/Dialogs/Dialog/Dialog.module.css?b2d8","components/Messanger/Dialogs/Dialog/Dialog.jsx","components/Messanger/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Messanger/Dialogs/DialogsContainer.jsx","webpack://react-1/./src/components/Messanger/Messages/Messages.module.css?6b27","webpack://react-1/./src/components/Messanger/Messages/Message/Message.module.css?77b8","components/Messanger/Messages/Message/Message.jsx","components/Messanger/Messages/SendMessage/SendMessage.jsx","components/Messanger/Messages/Messages.jsx","components/Messanger/Messages/MessagesContainer.jsx","components/Messanger/Messanger.jsx","webpack://react-1/./src/components/common/FormsControls/FormControls.module.css?2a3b","components/common/FormsControls/FormsControls.jsx","utils/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messangerWrapper\":\"Messanger_messangerWrapper__tRe5d\"};","// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Dialogs_header__gxWfY\",\"dialogs\":\"Dialogs_dialogs__1Khac\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"Dialog_dialog__LYBBG\",\"name\":\"Dialog_name__dqda6\",\"circle\":\"Dialog_circle__I89A6\",\"active\":\"Dialog_active__r6DZ2\"};","import React from 'react'\r\nimport s from './Dialog.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialog}>\r\n            <div className={s.status}>\r\n                <svg viewBox=\"0 0 80 80\" width=\"10\" height=\"10\">\r\n                    <circle className={s.circle} cx=\"40\" cy=\"40\" r=\"38\"/>\r\n                </svg>\r\n            </div>\r\n            <div className={s.name}>\r\n                <NavLink to={'/dialogs/' + props.id}\r\n                         className={(navData) => navData.isActive ? s.active : \"\"}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react'\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./Dialog/Dialog\";\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsElements = (props.dialogs).map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>);\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <h1 className={s.header}>Dialogs</h1>\r\n            {dialogsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n}","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.messanger.dialogs\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps), withAuthRedirect)(Dialogs)","// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__-TNuF\",\"sendMessage\":\"Messages_sendMessage__NRbbo\",\"writeMessage\":\"Messages_writeMessage__VJOti\",\"sendBtn\":\"Messages_sendBtn__NfIZb\"};","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__wlGwP\",\"avatar\":\"Message_avatar__wNEFF\",\"text\":\"Message_text__LysZS\",\"bubble\":\"Message_bubble__oviVb\",\"speech\":\"Message_speech__6PxWm\"};","import React from 'react'\r\nimport s from './Message.module.css'\r\nimport avatar from '../../../../assets/images/user.png'\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.message}>\r\n            <div className={s.avatar}>\r\n                <img src={avatar} alt=\"avatar\"/>\r\n            </div>\r\n            <div className={s.text}>\r\n                <p className={s.bubble + ' ' + s.speech}>{props.message}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from 'react'\r\nimport s from \"../Messages.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators\";\r\n\r\nlet maxLength = maxLengthCreator(13);\r\n\r\nconst SendMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={s.sendMessage}>\r\n                <Field name=\"message\" component={Textarea} validate={[required, maxLength]} className={s.writeMessage} placeholder={'Write message...'} />\r\n                <button className={s.sendBtn} type=\"submit\">Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SendMessageReduxForm = reduxForm({\r\n    form: 'sendMessage'\r\n})(SendMessageForm)\r\n\r\nconst SendMessage = (props) => {\r\n    const onSubmit = (formData, dispatch) => {\r\n        props.addMessage(formData.message)\r\n        props.resetMessageForm(dispatch)\r\n    }\r\n    return (\r\n        <SendMessageReduxForm onSubmit={onSubmit} />\r\n    )\r\n}\r\n\r\nexport default SendMessage","import React from 'react';\r\nimport s from \"./Messages.module.css\";\r\nimport MessageItem from \"./Message/Message\";\r\nimport SendMessage from \"./SendMessage/SendMessage\";\r\n\r\nconst Messages = (props) => {\r\n    let messagesElements = (props.messages).map(m => <MessageItem key={m.id} message={m.message}/>);\r\n    return (\r\n        <div className={s.messages}>\r\n            {messagesElements}\r\n            <SendMessage resetMessageForm={props.resetMessageForm} addMessage={props.addMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messages","import React from 'react';\r\nimport {addMessageActionCreator} from \"../../../redux/messanger-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport {reset} from \"redux-form\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.messanger.messages\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (value) => {\r\n            dispatch(addMessageActionCreator(value));\r\n        },\r\n        resetMessageForm: (dispatch) => {\r\n            dispatch(reset('sendMessage'));\r\n        }\r\n    }\r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n\r\nexport default MessagesContainer","import React from 'react'\r\nimport s from './Messanger.module.css'\r\nimport DialogsContainer from \"./Dialogs/DialogsContainer\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\n\r\nconst Messanger = (props) => {\r\n    return (\r\n        <div className={s.messangerWrapper}>\r\n            <DialogsContainer />\r\n            <MessagesContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Messanger;","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__1dLyi\",\"error\":\"FormControls_error__QpIf-\"};","import React from 'react'\r\nimport s from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n    let hasError = touched && error\r\n    return (\r\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\r\n            {children}\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return (<FormControl {...props} ><textarea {...input} {...restProps} /></FormControl>)\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return ( <FormControl {...props}><input {...input} {...restProps}/></FormControl>)\r\n}\r\n\r\nexport const createField = (component, validate, type, name, props) => {\r\n    return (\r\n        <Field component={component} validate={validate} type={type} name={name} {...props}/>\r\n    )\r\n}","export const required = (value) => {\r\n    if (value) return undefined\r\n    return \"Field is required\"\r\n}\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if(value.length > maxLength) return `Field must be less than ${maxLength} symbols`;\r\n    return undefined;\r\n}"],"names":["props","className","s","viewBox","width","height","cx","cy","r","to","id","navData","isActive","name","dialogsElements","dialogs","map","d","Dialog","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messanger","Component","RedirectComponent","this","React","Dialogs","src","avatar","alt","message","maxLength","maxLengthCreator","SendMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","type","formData","dispatch","addMessage","resetMessageForm","messagesElements","messages","m","Message","value","addMessageActionCreator","reset","Messages","DialogsContainer","FormControl","input","meta","touched","error","children","hasError","restProps","child","Input","createField","length"],"sourceRoot":""}